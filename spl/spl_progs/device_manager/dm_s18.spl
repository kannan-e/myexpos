breakpoint;
alias functionNum R1;
alias currentPID R2;

//Disk Load
if(functionNum==2) then
	multipush(R1,R2,R3,R4);
	R1=3;
	call RESOURCE_MANAGER;
	multipop(R1,R2,R3,R4);
	
	[DISK_STATUS_TABLE + 1]=0;
	[DISK_STATUS_TABLE + 2]=R3;
	[DISK_STATUS_TABLE + 3]=R4;
	
	breakpoint;
	
	load(R3, R4);
	
	breakpoint;
	
	[PROCESS_TABLE + currentPID*16 + 4]=WAIT_DISK;
	
	breakpoint;
	
	multipush(R1,R2,R3,R4);
	call SCHEDULER;
	
	breakpoint;
	
	multipop(R1,R2,R3,R4);
	return;
endif;

//Terminal write
if(functionNum == 3) then
	multipush(R1,R2,R3);
	R1=8;
	call RESOURCE_MANAGER;
	multipop(R1,R2,R3);
	print(R3);
	multipush(R1,R2,R3);
	R1=9;
	call RESOURCE_MANAGER;
	multipop(R1,R2,R3);
	return;
endif;
	
//Terminal Read
if(functionNum == 4) then

	multipush(R1,R2,R3);
	R1=8;
	call RESOURCE_MANAGER;
	multipop(R1,R2,R3);
	
	read;
	[PROCESS_TABLE + currentPID*16 + 4]=WAIT_TERMINAL;
	multipush(R1,R2,R3);
	call SCHEDULER;
	multipop(R1,R2,R3);
	alias logicalAddress R3;
	alias physicalAddress R4;
	physicalAddress = ([PTBR + 2*(logicalAddress/512)]*512) + (logicalAddress % 512);
	[physicalAddress] = [PROCESS_TABLE + currentPID*16 + 8];
	return;

else
	return;
endif; 
